//
//  PokedexViewController.swift
//  MyPokedex
//
//  Created by Christian Adiputra on 05/03/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import SkeletonView

final class PokedexViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: PokedexPresenterInterface!
    
    var collectionView: UICollectionView = {
        let layout = UICollectionViewFlowLayout()
        layout.scrollDirection = .vertical
        let collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)
        collectionView.register(
            PokemonCell.self, forCellWithReuseIdentifier: "PokemonCell")
        return collectionView
    }()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setupLayout()
        setupBar()
        presenter.getAllPokemon()
    }
    
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        collectionView.frame = view.bounds
    }
    
    private func setupLayout() {
        collectionView.delegate = self
        collectionView.dataSource = self

        view.addSubview(collectionView)
        
        collectionView.snp.makeConstraints { make in
            make.top.left.right.bottom.equalToSuperview()
        }
    }
    
    private func setupBar() {
        navigationItem.rightBarButtonItem = UIBarButtonItem(title: "My Pokemon", style: .plain, target: self, action: #selector(navigateToMyPokemon))
    }
    
    @objc func navigateToMyPokemon() {
        presenter.goToMyPokemon()
    }

}

// MARK: - Extensions -

extension PokedexViewController: PokedexViewInterface {
    func reloadData() {
        collectionView.reloadData()
    }
    
    
    func getSize() -> CGSize {
        let width = (UIScreen.main.bounds.width-40)/2
        let height = width
        return CGSize(width: width, height: height)
    }
}


extension PokedexViewController: UICollectionViewDelegate, SkeletonCollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    func collectionSkeletonView(_ skeletonView: UICollectionView, cellIdentifierForItemAt indexPath: IndexPath) -> SkeletonView.ReusableCellIdentifier {
        return "PokemonCell"
    }
    
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        return UIEdgeInsets(top: 16, left: 16, bottom: 16, right: 16)
        
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let size: CGSize = getSize()
        return CGSize(width: size.width, height: size.height)
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return presenter.pokemons?.count ?? 3
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        guard let cell = collectionView.dequeueReusableCell( withReuseIdentifier: "PokemonCell", for: indexPath)
                as? PokemonCell
        else { return UICollectionViewCell() }

        if let data = presenter.pokemons?[indexPath.row] {
            cell.updateView(pokemon: data)
        }
        
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView,layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 8
    }
    
    func collectionView(_ collectionView: UICollectionView,layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return 8
    }

    
    func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) {
        let offsetY = scrollView.contentOffset.y
        let height = scrollView.contentSize.height
        
        if offsetY > height - scrollView.frame.size.height {
            presenter.getAllPokemon()
        }
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        if let data = presenter.pokemons?[indexPath.row].id {
            presenter.goToDetail(pokemonId: Int(data) ?? 0)
        }
        
    }
    
}

