//
//  PokedexPresenter.swift
//  MyPokedex
//
//  Created by Christian Adiputra on 05/03/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import NetworkKit

final class PokedexPresenter {

    // MARK: - Private properties -

    private unowned let view: PokedexViewInterface
    private let interactor: PokedexInteractorInterface
    private let wireframe: PokedexWireframeInterface
    var pokemons: [PokedexModel]?
    var offSet: Int

    // MARK: - Lifecycle -

    init(
        view: PokedexViewInterface,
        interactor: PokedexInteractorInterface,
        wireframe: PokedexWireframeInterface
    ) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        offSet = 0
    }
}

// MARK: - Extensions -

extension PokedexPresenter: PokedexPresenterInterface {
    func goToMyPokemon() {
        wireframe.goToMyPokemon()
    }
    
    
    func goToDetail(pokemonId: Int) {
        wireframe.goToDetail(pokemonId: pokemonId)
    }
    
    
    func getAllPokemon() {
        interactor.getAllPokemon(offSet: offSet)
    }
    
}

extension PokedexPresenter: PokedexInteractorOutputInterface {
    func didFailedGetListPokemon(message: String) {
        
    }
    
    func didSuccessGetListPokemon(pokemon: [PokedexModel]?) {
        guard let pokemon = pokemon else { return }
        if offSet == 0 {
            self.pokemons = pokemon
        } else {
            self.pokemons?.append(contentsOf: pokemon)
        }
        
        offSet += pokemon.count
        view.reloadData()
    }
    
    
    
}
